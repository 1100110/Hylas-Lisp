!http://eudoxia0.github.com/Hylas-Lisp/img/logo.svg(Logo)!

Hylas is a statically-typed, "wide-spectrum":http://en.wikipedia.org/wiki/Wide-spectrum_language, JIT-compiled dialect of Lisp that combines the performance and control of low-level languages with the advanced metaprogramming features of languages like Lisp.

.h1 Examples

.h2 Recursive, Tail Call-Optimized Fibonacci Function:

@lisp
(function fib i64 ((n i64))
  (if (< n 2)
    n
    (add (fib (sub n 1))
         (fib (sub n 2)))))
@

.h2 Calling a foreign function:

@lisp
(foreign C printf i32 (pointer i8) ...)

(printf "Hello, world! This is a double, in scientific notation: %e", 3.141592)
@

.h2 Using a foreign library:

@lisp
(link "libSDL.so")

(foreign C SDL_Init void i64)
(foreign C SDL_Delay void i64)
(foreign C SDL_Quit void)

(structure SDL_Color
  (r            byte)
  (g            byte)
  (b            byte)
  (unused       byte))
@

.h1 Benchmarks

.h1 Types

|_. Kind |_. C |_. Hylas |
| *Integers* | <code>char</code>, <code>short</code>, <code>int</code>, <code>long</code>, <code>long long</code>, signed and unsigned. | i1, i2, i3... i8388607. (Number indicates the bit-width).
Signature is a property of <em>operations</em>, not types.
        Aliases exist for the most common ones:
        |
| *Floating Point* | float, double, long double | half, float, double, fp128, x86_fp80, ppc_fp128 |
| *Aggreagate* | Structures (Can be opaque), arrays, pointers and unions. Has void pointers. | Structures (Can be opaque) and pointers. Arrays are pointers. Doesn't have void pointers, can be implemented through coercion functions. |
| *Standard Library* | size_t, FILE*, _Bool | Hash Tables, Sequences (Resizable arrays, bound-checked arrays), filesystem-independent Filepath and Process objects... |
